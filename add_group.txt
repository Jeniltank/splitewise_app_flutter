*import 'package:flutter/material.dart';
import 'package:splitewise_flutter/Firebase_services/database_service_for_add_group.dart';
import 'package:splitewise_flutter/models/group.dart';

class AddGroup extends StatefulWidget {
  const AddGroup({Key? key}) : super(key: key);

  @override
  State<AddGroup> createState() => _AddGroupState();
}

class _AddGroupState extends State<AddGroup> {
  final DatabaseServiceForAddGroup _databaseService =
      DatabaseServiceForAddGroup();
  TextEditingController groupNameController = TextEditingController();
  String? groupType;
  List<String> groupList = []; // List to store group names

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black87,
      appBar: AppBar(
        automaticallyImplyLeading: false,
        centerTitle: true,
        title: Text(
          "Create a group",
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: Colors.green,
        actions: [
          Padding(
            padding: EdgeInsets.only(right: 20.0),
            child: Align(
              alignment: Alignment.topLeft,
              child: IconButton(
                icon: Icon(Icons.close, color: Colors.white),
                onPressed: () {
                  Navigator.pop(context);
                },
              ),
            ),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(height: 20),
            Row(
              children: [
                CircleAvatar(
                  radius: 30,
                  backgroundColor:
                      Colors.green, // Customize the color as needed
                  child: Icon(
                    Icons.group,
                    color: Colors.white,
                  ),
                ),
                SizedBox(
                    width:
                        10), // Add some space between the CircleAvatar and TextField
                Expanded(
                  child: TextField(
                    controller: groupNameController,
                    style: TextStyle(color: Colors.white),
                    decoration: InputDecoration(
                      hintText: 'Enter group name',
                      hintStyle: TextStyle(color: Colors.white),
                      enabledBorder: UnderlineInputBorder(
                        borderSide: BorderSide(color: Colors.white),
                      ),
                      focusedBorder: UnderlineInputBorder(
                        borderSide: BorderSide(color: Colors.white),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 20),
            Text(
              "Type",
              style: TextStyle(color: Colors.white),
            ),
            SizedBox(height: 20),
            SingleChildScrollView(
              scrollDirection: Axis.horizontal,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        groupType = 'Trip';
                      });
                    },
                    child: Text(
                      'Trip',
                      style: TextStyle(color: Colors.white),
                    ),
                    style: ElevatedButton.styleFrom(
                      primary: groupType == 'Trip' ? Colors.green : Colors.grey,
                    ),
                  ),
                  SizedBox(width: 10),
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        groupType = 'Food';
                      });
                    },
                    child: Text(
                      'Food',
                      style: TextStyle(color: Colors.white),
                    ),
                    style: ElevatedButton.styleFrom(
                      primary: groupType == 'Food' ? Colors.green : Colors.grey,
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                String groupName = groupNameController.text;
                if (groupName.isNotEmpty && groupType != null) {
                  Group group = Group(
                    groupName: groupName,
                    groupType: groupType!, groupId: '',
                    creatorUserId: '', // Ensure groupType is String
                  );
                  _databaseService.addGroup(group);
                  setState(() {
                    groupList.add(groupName);
                  });
                  groupNameController.clear();
                } else {
                  print('Please enter group name and select group type');
                }
              },
              style: ElevatedButton.styleFrom(
                primary: Colors.green,
                textStyle: TextStyle(color: Colors.white),
                padding: EdgeInsets.symmetric(vertical: 16.0),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
              ),
              child: Text(
                'Create Group',
                style: TextStyle(color: Colors.white),
              ),
            ),
            SizedBox(height: 30),
            Expanded(
              child: StreamBuilder<List<Group>>(
                stream: _databaseService.getGroups(),
                builder: (context, snapshot) {
                  if (snapshot.hasError) {
                    return Center(
                      child: Text('Error: ${snapshot.error}'),
                    );
                  }
                  if (snapshot.connectionState == ConnectionState.waiting) {
                    return Center(
                      child: CircularProgressIndicator(),
                    );
                  }
                  List<Group>? groups = snapshot.data;
                  if (groups == null || groups.isEmpty) {
                    return Center(
                      child: Text('No Groups Found'),
                    );
                  }
                  return ListView.builder(
                    itemCount: groups.length,
                    itemBuilder: (context, index) {
                      Group group = groups[index];
                      return Card(
                        color: Colors.green,
                        elevation: 2, // Add elevation for a shadow effect
                        margin: EdgeInsets.symmetric(
                            vertical: 5,
                            horizontal: 5), // Add margin for spacing
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(
                              12), // Round corners of the card
                        ),
                        child: ListTile(
                          contentPadding: EdgeInsets.symmetric(
                              vertical: 20,
                              horizontal: 20), // Padding for content
                          leading: Icon(
                            Icons.group,
                            color: Colors.white,
                          ), // Add leading icon
                          title: Text(
                            group.groupName,
                            style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 18,
                                color: Colors.white),
                          ), // Larger, bold font for group name
                          subtitle: Text(
                            'Type: ${group.groupType}',
                            style: TextStyle(
                              fontStyle: FontStyle.italic,
                              color: Colors.white,
                            ),
                          ), // Italic and smaller font for group type
                          trailing: Icon(
                            Icons.arrow_forward,
                            color: Colors.white,
                          ), // Add trailing icon
                          onTap: () {
                            // Add onTap functionality if needed
                          },
                        ),
                      );
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: AddGroup(),
  ));
}





/*********************************************************/***********************/

   ************************gtoup Screen **************************************

import 'package:flutter/material.dart';
import 'package:splitewise_flutter/Firebase_services/database_service_for_add_group.dart';
import 'package:splitewise_flutter/group_Screen_Child/add_Group.dart'
    as AddGroupChild; // Use a prefix to disambiguate
import 'package:splitewise_flutter/models/group.dart';

class GroupScreen extends StatefulWidget {
  final String userId;

  const GroupScreen({
    Key? key,
    required this.userId,
    required List groups,
    required String groupType,
    required String groupName,
  }) : super(key: key);

  @override
  State<GroupScreen> createState() => _GroupScreenState();
}

class _GroupScreenState extends State<GroupScreen> {
  final DatabaseServiceForAddGroup _databaseService =
      DatabaseServiceForAddGroup();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black87,
      appBar: AppBar(
        backgroundColor: Colors.green,
        automaticallyImplyLeading: false,
        actions: [
          IconButton(
            icon: Icon(Icons.search, color: Colors.white),
            onPressed: () {
              // Add your onPressed logic for the search icon here
            },
          ),
          IconButton(
            icon: Icon(Icons.group, color: Colors.white),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) =>
                      AddGroupChild.AddGroup(), // Use the prefix
                ),
              );
            },
          ),
        ],
        centerTitle: true,
        title: Text(
          "Group Screen",
          style: TextStyle(color: Colors.white),
        ),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            SizedBox(
              height: 30,
            ),
            Container(
              decoration: BoxDecoration(
                color: Colors.green,
                border: Border.all(color: Colors.green),
                borderRadius: BorderRadius.circular(8.0),
              ),
              child: TextButton.icon(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) =>
                          AddGroupChild.AddGroup(), // Use the prefix
                    ),
                  );
                },
                icon: Icon(
                  Icons.group,
                  color: Colors.white,
                ),
                label: Text(
                  "Start new Group",
                  style: TextStyle(color: Colors.white, fontSize: 20),
                ),
                style: TextButton.styleFrom(
                  backgroundColor: Colors.transparent,
                  padding:
                      EdgeInsets.symmetric(vertical: 16.0, horizontal: 24.0),
                ),
              ),
            ),
            SizedBox(height: 20),
            Expanded(
              child: StreamBuilder<List<Group>>(
                stream: _databaseService.getGroupsForUser(widget.userId),
                builder: (context, snapshot) {
                  if (snapshot.hasError) {
                    return Center(
                      child: Text('Error: ${snapshot.error}'),
                    );
                  }
                  if (snapshot.connectionState == ConnectionState.waiting) {
                    return Center(
                      child: CircularProgressIndicator(),
                    );
                  }
                  List<Group>? groups = snapshot.data;
                  if (groups == null || groups.isEmpty) {
                    return Center(
                      child: Text("No groups found"),
                    );
                  }
                  return ListView.builder(
                    itemCount: groups.length,
                    itemBuilder: (context, index) {
                      Group group = groups[index];
                      return Card(
                        color: Colors.green,
                        elevation: 2, // Add elevation for a shadow effect
                        margin: EdgeInsets.symmetric(
                          vertical: 5,
                          horizontal: 5,
                        ), // Add margin for spacing
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(
                            12,
                          ), // Round corners of the card
                        ),
                        child: ListTile(
                          contentPadding: EdgeInsets.symmetric(
                            vertical: 20,
                            horizontal: 20,
                          ), // Padding for content
                          leading: Icon(
                            Icons.group,
                            color: Colors.white,
                          ), // Add leading icon
                          title: Text(
                            group.groupName,
                            style: TextStyle(
                              fontWeight: FontWeight.bold,
                              fontSize: 18,
                              color: Colors.white,
                            ),
                          ), // Larger, bold font for group name
                          subtitle: Text(
                            'Type: ${group.groupType}',
                            style: TextStyle(
                              fontStyle: FontStyle.italic,
                              color: Colors.white,
                            ),
                          ), // Italic and smaller font for group type
                          trailing: Icon(
                            Icons.arrow_forward,
                            color: Colors.white,
                          ), // Add trailing icon
                          onTap: () {
                            // Add onTap functionality if needed
                          },
                        ),
                      );
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}
************************************************************************************************

****************************add group ********************************


import 'package:flutter/material.dart';
import 'package:splitewise_flutter/Firebase_services/database_service_for_add_group.dart';
import 'package:splitewise_flutter/models/group.dart';

class AddGroup extends StatefulWidget {
  const AddGroup({Key? key}) : super(key: key);

  @override
  State<AddGroup> createState() => _AddGroupState();
}

class _AddGroupState extends State<AddGroup> {
  final DatabaseServiceForAddGroup _databaseService =
      DatabaseServiceForAddGroup();
  TextEditingController groupNameController = TextEditingController();
  String? groupType;
  List<String> groupList = []; // List to store group names

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black87,
      appBar: AppBar(
        automaticallyImplyLeading: false,
        centerTitle: true,
        title: Text(
          "Create a group",
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: Colors.green,
        actions: [
          Padding(
            padding: EdgeInsets.only(right: 20.0),
            child: Align(
              alignment: Alignment.topLeft,
              child: IconButton(
                icon: Icon(Icons.close, color: Colors.white),
                onPressed: () {
                  Navigator.pop(context);
                },
              ),
            ),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(height: 20),
            Row(
              children: [
                CircleAvatar(
                  radius: 30,
                  backgroundColor:
                      Colors.green, // Customize the color as needed
                  child: Icon(
                    Icons.group,
                    color: Colors.white,
                  ),
                ),
                SizedBox(
                    width:
                        10), // Add some space between the CircleAvatar and TextField
                Expanded(
                  child: TextField(
                    controller: groupNameController,
                    style: TextStyle(color: Colors.white),
                    decoration: InputDecoration(
                      hintText: 'Enter group name',
                      hintStyle: TextStyle(color: Colors.white),
                      enabledBorder: UnderlineInputBorder(
                        borderSide: BorderSide(color: Colors.white),
                      ),
                      focusedBorder: UnderlineInputBorder(
                        borderSide: BorderSide(color: Colors.white),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 20),
            Text(
              "Type",
              style: TextStyle(color: Colors.white),
            ),
            SizedBox(height: 20),
            SingleChildScrollView(
              scrollDirection: Axis.horizontal,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        groupType = 'Trip';
                      });
                    },
                    child: Text(
                      'Trip',
                      style: TextStyle(color: Colors.white),
                    ),
                    style: ElevatedButton.styleFrom(
                      primary: groupType == 'Trip' ? Colors.green : Colors.grey,
                    ),
                  ),
                  SizedBox(width: 10),
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        groupType = 'Food';
                      });
                    },
                    child: Text(
                      'Food',
                      style: TextStyle(color: Colors.white),
                    ),
                    style: ElevatedButton.styleFrom(
                      primary: groupType == 'Food' ? Colors.green : Colors.grey,
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                String groupName = groupNameController.text;
                if (groupName.isNotEmpty && groupType != null) {
                  String userId =
                      await _databaseService.getUserIdFromUsersCollection(
                          groupName); // Fetch the user ID from the Users collection in Firestore
                  // String userId = await _databaseService.getUserIdFromUsersCollection();
                  Group group = Group(
                    groupName: groupName,
                    groupType: groupType!,
                    groupId: '', // Replace with actual groupId from Firestore
                    creatorUserId: userId, // Use the fetched user ID
                  );

                  await _databaseService.addGroup(group, userId);

                  setState(() {
                    groupList.add(groupName);
                  });
                  groupNameController.clear();
                } else {
                  print('Please enter group name and select group type');
                }
              },
              style: ElevatedButton.styleFrom(
                primary: Colors.green,
                textStyle: TextStyle(color: Colors.white),
                padding: EdgeInsets.symmetric(vertical: 16.0),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
              ),
              child: Text(
                'Create Group',
                style: TextStyle(color: Colors.white),
              ),
            ),
            SizedBox(height: 30),
            Expanded(
              child: StreamBuilder<List<Group>>(
                stream: _databaseService.getGroups(),
                builder: (context, snapshot) {
                  if (snapshot.hasError) {
                    return Center(
                      child: Text('Error: ${snapshot.error}'),
                    );
                  }
                  if (snapshot.connectionState == ConnectionState.waiting) {
                    return Center(
                      child: CircularProgressIndicator(),
                    );
                  }
                  List<Group>? groups = snapshot.data;
                  if (groups == null || groups.isEmpty) {
                    return Center(
                      child: Text('No Groups Found'),
                    );
                  }
                  return ListView.builder(
                    itemCount: groups.length,
                    itemBuilder: (context, index) {
                      Group group = groups[index];
                      return Card(
                        color: Colors.green,
                        elevation: 2, // Add elevation for a shadow effect
                        margin: EdgeInsets.symmetric(
                            vertical: 5,
                            horizontal: 5), // Add margin for spacing
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(
                              12), // Round corners of the card
                        ),
                        child: ListTile(
                          contentPadding: EdgeInsets.symmetric(
                              vertical: 20,
                              horizontal: 20), // Padding for content
                          leading: Icon(
                            Icons.group,
                            color: Colors.white,
                          ), // Add leading icon
                          title: Text(
                            group.groupName,
                            style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 18,
                                color: Colors.white),
                          ), // Larger, bold font for group name
                          subtitle: Text(
                            'Type: ${group.groupType}',
                            style: TextStyle(
                              fontStyle: FontStyle.italic,
                              color: Colors.white,
                            ),
                          ), // Italic and smaller font for group type 
                          trailing: Icon(
                            Icons.arrow_forward,
                            color: Colors.white,
                          ), // Add trailing icon
                          onTap: () {
                            // Add onTap functionality if needed
                          },
                        ),
                      );
                    },
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: AddGroup(),
  ));
}
*************************************************************18/3/24*****************************************************************

import 'package:flutter/material.dart';
import 'package:splitewise_flutter/Firebase_services/database_service_for_add_group.dart';
import 'package:splitewise_flutter/models/group.dart';

class AddGroup extends StatefulWidget {
  const AddGroup({Key? key}) : super(key: key);

  @override
  State<AddGroup> createState() => _AddGroupState();
}

class _AddGroupState extends State<AddGroup> {
  final DatabaseServiceForAddGroup _databaseService =
      DatabaseServiceForAddGroup();
  TextEditingController groupNameController = TextEditingController();
  String? groupType;
  List<String> groupList = []; // List to store group names

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black87,
      appBar: AppBar(
        automaticallyImplyLeading: false,
        centerTitle: true,
        title: Text(
          "Create a group",
          style: TextStyle(color: Colors.white),
        ),
        backgroundColor: Colors.green,
        actions: [
          Padding(
            padding: EdgeInsets.only(right: 20.0),
            child: Align(
              alignment: Alignment.topLeft,
              child: IconButton(
                icon: Icon(Icons.close, color: Colors.white),
                onPressed: () {
                  Navigator.pop(context);
                },
              ),
            ),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(height: 20),
            Row(
              children: [
                CircleAvatar(
                  radius: 30,
                  backgroundColor:
                      Colors.green, // Customize the color as needed
                  child: Icon(
                    Icons.group,
                    color: Colors.white,
                  ),
                ),
                SizedBox(
                    width:
                        10), // Add some space between the CircleAvatar and TextField
                Expanded(
                  child: TextField(
                    controller: groupNameController,
                    style: TextStyle(color: Colors.white),
                    decoration: InputDecoration(
                      hintText: 'Enter group name',
                      hintStyle: TextStyle(color: Colors.white),
                      enabledBorder: UnderlineInputBorder(
                        borderSide: BorderSide(color: Colors.white),
                      ),
                      focusedBorder: UnderlineInputBorder(
                        borderSide: BorderSide(color: Colors.white),
                      ),
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 20),
            Text(
              "Type",
              style: TextStyle(color: Colors.white),
            ),
            SizedBox(height: 20),
            SingleChildScrollView(
              scrollDirection: Axis.horizontal,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        groupType = 'Trip';
                      });
                    },
                    child: Text(
                      'Trip',
                      style: TextStyle(color: Colors.white),
                    ),
                    style: ElevatedButton.styleFrom(
                      primary: groupType == 'Trip' ? Colors.green : Colors.grey,
                    ),
                  ),
                  SizedBox(width: 10),
                  ElevatedButton(
                    onPressed: () {
                      setState(() {
                        groupType = 'Food';
                      });
                    },
                    child: Text(
                      'Food',
                      style: TextStyle(color: Colors.white),
                    ),
                    style: ElevatedButton.styleFrom(
                      primary: groupType == 'Food' ? Colors.green : Colors.grey,
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                String groupName = groupNameController.text;
                if (groupName.isNotEmpty && groupType != null) {
                  String userId =
                      await _databaseService.getUserIdFromUsersCollection(
                          groupName); // Fetch the user ID from the Users collection in Firestore
                  // String userId = await _databaseService.getUserIdFromUsersCollection();
                  Group group = Group(
                    groupName: groupName,
                    groupType: groupType!,
                    //groupId: '', // Replace with actual groupId from Firestore
                    creatorUserId: userId,
                    groupId: '', // Use the fetched user ID
                  );

                  await _databaseService.addGroup(group, userId);

                  setState(() {
                    groupList.add(groupName);
                  });
                  groupNameController.clear();
                } else {
                  print('Please enter group name and select group type');
                }
              },
              style: ElevatedButton.styleFrom(
                primary: Colors.green,
                textStyle: TextStyle(color: Colors.white),
                padding: EdgeInsets.symmetric(vertical: 16.0),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(8.0),
                ),
              ),
              child: Text(
                'Create Group',
                style: TextStyle(color: Colors.white),
              ),
            ),
            SizedBox(height: 30),
            Expanded(
              child: ListView.builder(
                itemCount: groupList.length,
                itemBuilder: (context, index) {
                  String groupName = groupList[index];
                  return ListTile(
                    title: Text(
                      groupName,
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: AddGroup(),
  ));
}



